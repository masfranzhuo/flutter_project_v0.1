// Mocks generated by Mockito 5.2.0 from annotations
// in flutter_project/test/src/repositories/user_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:flutter_project/src/data_sources/user_data_source.dart' as _i3;
import 'package:flutter_project/src/entities/user.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUser_0 extends _i1.Fake implements _i2.User {}

/// A class which mocks [UserDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserDataSource extends _i1.Mock implements _i3.UserDataSource {
  MockUserDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.User>> getUsers({int? pages, int? limit = 20}) =>
      (super.noSuchMethod(
              Invocation.method(#getUsers, [], {#pages: pages, #limit: limit}),
              returnValue: Future<List<_i2.User>>.value(<_i2.User>[]))
          as _i4.Future<List<_i2.User>>);
  @override
  _i4.Future<_i2.User> getUser({String? id}) =>
      (super.noSuchMethod(Invocation.method(#getUser, [], {#id: id}),
              returnValue: Future<_i2.User>.value(_FakeUser_0()))
          as _i4.Future<_i2.User>);
}
